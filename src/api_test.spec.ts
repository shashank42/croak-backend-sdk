test('My Greeter', () => {
  expect(1).toBe(1);
});

// /**
//  * namaste-be
//  * Namaste Server
//  *
//  * OpenAPI spec version: 0.1.0
//  *
//  *
//  * NOTE: This file is auto generated by the swagger code generator program.
//  * https://github.com/swagger-api/swagger-codegen.git
//  * Do not edit the file manually.
//  */

// import * as api from "./api"
// import { Configuration } from "./configuration"

// const config: Configuration = {}

// describe("AdminAPIsApi", () => {
//   let instance: api.AdminAPIsApi
//   beforeEach(function() {
//     instance = new api.AdminAPIsApi(config)
//   });

//   test("getCompany", () => {
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getCompany(xApiKey, {})).resolves.toBe(null)
//   })
//   test("getRelayerBalance", () => {
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getRelayerBalance(xApiKey, {})).resolves.toBe(null)
//   })
//   test("postCompany", () => {
//     const body: api.ICreateCompany = undefined
//     return expect(instance.postCompany(body, {})).resolves.toBe(null)
//   })
// })

// describe("AirdropAPIsApi", () => {
//   let instance: api.AirdropAPIsApi
//   beforeEach(function() {
//     instance = new api.AirdropAPIsApi(config)
//   });

//   test("mintTestFungibleTokenData", () => {
//     const body: api.IMintData = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.mintTestFungibleTokenData(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("mintTokenData", () => {
//     const body: api.IMintData = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.mintTokenData(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("mintTokenGroupData", () => {
//     const body: api.IMintTokenGroupData = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.mintTokenGroupData(body, xApiKey, {})).resolves.toBe(null)
//   })
// })

// describe("ContractApisApi", () => {
//   let instance: api.ContractApisApi
//   beforeEach(function() {
//     instance = new api.ContractApisApi(config)
//   });

//   test("createContract", () => {
//     const body: api.IContract = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.createContract(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("listContracts", () => {
//     const xApiKey: string = "xApiKey_example"
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     return expect(instance.listContracts(xApiKey, lastId, size, {})).resolves.toBe(null)
//   })
// })

// describe("CustodianWalletAPIsDeprApi", () => {
//   let instance: api.CustodianWalletAPIsDeprApi
//   beforeEach(function() {
//     instance = new api.CustodianWalletAPIsDeprApi(config)
//   });

//   test("createCustodialWallet", () => {
//     const body: api.IWallet = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.createCustodialWallet(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("getCustodialWallet", () => {
//     const walletId: string = "walletId_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getCustodialWallet(walletId, xApiKey, {})).resolves.toBe(null)
//   })
//   test("getCustodialWalletBalance", () => {
//     const walletId: string = "walletId_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getCustodialWalletBalance(walletId, xApiKey, {})).resolves.toBe(null)
//   })
//   test("getUserCustodialWallets", () => {
//     const email: string = "email_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getUserCustodialWallets(email, xApiKey, {})).resolves.toBe(null)
//   })
//   test("listCustodialWallets", () => {
//     const xApiKey: string = "xApiKey_example"
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     return expect(instance.listCustodialWallets(xApiKey, lastId, size, {})).resolves.toBe(null)
//   })
//   test("signMessage", () => {
//     const body: api.IWalletSign = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.signMessage(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("signTypedData", () => {
//     const body: api.IWalletTypedSign = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.signTypedData(body, xApiKey, {})).resolves.toBe(null)
//   })
// })

// describe("EmailAuthApi", () => {
//   let instance: api.EmailAuthApi
//   beforeEach(function() {
//     instance = new api.EmailAuthApi(config)
//   });

//   test("emailVerificationLink", () => {
//     const body: api.IWalletCustomAuth = undefined
//     return expect(instance.emailVerificationLink(body, {})).resolves.toBe(null)
//   })
//   test("jwks", () => {
//     return expect(instance.jwks({})).resolves.toBe(null)
//   })
//   test("loginUser", () => {
//     const body: api.IWalletCustomAuth = undefined
//     return expect(instance.loginUser(body, {})).resolves.toBe(null)
//   })
//   test("registerUser", () => {
//     const body: api.IWalletCustomAuth = undefined
//     return expect(instance.registerUser(body, {})).resolves.toBe(null)
//   })
//   test("resetPassword", () => {
//     const body: api.IWalletResetPassword = undefined
//     return expect(instance.resetPassword(body, {})).resolves.toBe(null)
//   })
//   test("resetPasswordLink", () => {
//     const body: api.IWalletCustomAuth = undefined
//     return expect(instance.resetPasswordLink(body, {})).resolves.toBe(null)
//   })
//   test("verifyEmail", () => {
//     const token: string = "token_example"
//     return expect(instance.verifyEmail(token, {})).resolves.toBe(null)
//   })
// })

// describe("MarketApisApi", () => {
//   let instance: api.MarketApisApi
//   beforeEach(function() {
//     instance = new api.MarketApisApi(config)
//   });

//   test("createBuyOrder", () => {
//     const body: api.ICreateBuyOrder = undefined
//     const accessToken: string = "accessToken_example"
//     return expect(instance.createBuyOrder(body, accessToken, {})).resolves.toBe(null)
//   })
//   test("createMintSellOrder", () => {
//     const body: api.ICreateMintSellOrder = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.createMintSellOrder(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("createSellOrder", () => {
//     const body: api.ICreateSellOrder = undefined
//     const accessToken: string = "accessToken_example"
//     return expect(instance.createSellOrder(body, accessToken, {})).resolves.toBe(null)
//   })
//   test("listBidOrders", () => {
//     const xApiKey: string = "xApiKey_example"
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     const walletId: string = "walletId_example"
//     const tokenDataId: string = "tokenDataId_example"
//     return expect(instance.listBidOrders(xApiKey, lastId, size, walletId, tokenDataId, {})).resolves.toBe(null)
//   })
//   test("listSellOrders", () => {
//     const xApiKey: string = "xApiKey_example"
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     const walletId: string = "walletId_example"
//     const tokenDataId: string = "tokenDataId_example"
//     return expect(instance.listSellOrders(xApiKey, lastId, size, walletId, tokenDataId, {})).resolves.toBe(null)
//   })
//   test("submitBidOrder", () => {
//     const body: api.ISignatureResponse = undefined
//     const accessToken: string = "accessToken_example"
//     return expect(instance.submitBidOrder(body, accessToken, {})).resolves.toBe(null)
//   })
//   test("submitSellOrder", () => {
//     const body: api.ISignatureResponse = undefined
//     const accessToken: string = "accessToken_example"
//     return expect(instance.submitSellOrder(body, accessToken, {})).resolves.toBe(null)
//   })
// })

// describe("NonCustodialWalletAPIsApi", () => {
//   let instance: api.NonCustodialWalletAPIsApi
//   beforeEach(function() {
//     instance = new api.NonCustodialWalletAPIsApi(config)
//   });

//   test("getUserWallets", () => {
//     const email: string = "email_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getUserWallets(email, xApiKey, {})).resolves.toBe(null)
//   })
//   test("getWallet", () => {
//     const walletId: string = "walletId_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getWallet(walletId, xApiKey, {})).resolves.toBe(null)
//   })
//   test("listWallets", () => {
//     const xApiKey: string = "xApiKey_example"
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     return expect(instance.listWallets(xApiKey, lastId, size, {})).resolves.toBe(null)
//   })
// })

// describe("TokenDataApisApi", () => {
//   let instance: api.TokenDataApisApi
//   beforeEach(function() {
//     instance = new api.TokenDataApisApi(config)
//   });

//   test("createTokenData", () => {
//     const body: api.ITokenData = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.createTokenData(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("getTokenDataForServer", () => {
//     const tokenDataId: string = "tokenDataId_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getTokenDataForServer(tokenDataId, xApiKey, {})).resolves.toBe(null)
//   })
//   test("listTokenData", () => {
//     const xApiKey: string = "xApiKey_example"
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     return expect(instance.listTokenData(xApiKey, lastId, size, {})).resolves.toBe(null)
//   })
//   test("updateTokenData", () => {
//     const body: api.IUpdateTokenData = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.updateTokenData(body, xApiKey, {})).resolves.toBe(null)
//   })
// })

// describe("TokenDataGroupApisApi", () => {
//   let instance: api.TokenDataGroupApisApi
//   beforeEach(function() {
//     instance = new api.TokenDataGroupApisApi(config)
//   });

//   test("createTokenGroupData", () => {
//     const body: api.ITokenGroupData = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.createTokenGroupData(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("getTokenGroupData", () => {
//     const tokenGroupDataId: string = "tokenGroupDataId_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getTokenGroupData(tokenGroupDataId, xApiKey, {})).resolves.toBe(null)
//   })
//   test("listTokenGroupData", () => {
//     const xApiKey: string = "xApiKey_example"
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     return expect(instance.listTokenGroupData(xApiKey, lastId, size, {})).resolves.toBe(null)
//   })
//   test("updateTokenGroupData", () => {
//     const body: api.IUpdateTokenGroupData = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.updateTokenGroupData(body, xApiKey, {})).resolves.toBe(null)
//   })
// })

// describe("TokenTransferAPIsApi", () => {
//   let instance: api.TokenTransferAPIsApi
//   beforeEach(function() {
//     instance = new api.TokenTransferAPIsApi(config)
//   });

//   test("createTransferOrder", () => {
//     const body: api.ICreateTokenTransfer = undefined
//     const accessToken: string = "accessToken_example"
//     return expect(instance.createTransferOrder(body, accessToken, {})).resolves.toBe(null)
//   })
//   test("submitTransferOrder", () => {
//     const body: api.ISubmitTokenTransferString = undefined
//     const accessToken: string = "accessToken_example"
//     return expect(instance.submitTransferOrder(body, accessToken, {})).resolves.toBe(null)
//   })
// })

// describe("WalletAuthAPIsApi", () => {
//   let instance: api.WalletAuthAPIsApi
//   beforeEach(function() {
//     instance = new api.WalletAuthAPIsApi(config)
//   });

//   test("exchangeToken", () => {
//     const body: api.IWalletAuth = undefined
//     return expect(instance.exchangeToken(body, {})).resolves.toBe(null)
//   })
//   test("refreshTokenFromClientServer", () => {
//     const body: api.IRefreshToken = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.refreshTokenFromClientServer(body, xApiKey, {})).resolves.toBe(null)
//   })
//   test("verifyUserFromClientServer", () => {
//     const body: api.IVerifyToken = undefined
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.verifyUserFromClientServer(body, xApiKey, {})).resolves.toBe(null)
//   })
// })

// describe("WalletBalanceAPIsApi", () => {
//   let instance: api.WalletBalanceAPIsApi
//   beforeEach(function() {
//     instance = new api.WalletBalanceAPIsApi(config)
//   });

//   test("getTestErc20Balance", () => {
//     const walletId: string = "walletId_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getTestErc20Balance(walletId, xApiKey, {})).resolves.toBe(null)
//   })
//   test("getWalletBalance", () => {
//     const walletId: string = "walletId_example"
//     const xApiKey: string = "xApiKey_example"
//     return expect(instance.getWalletBalance(walletId, xApiKey, {})).resolves.toBe(null)
//   })
//   test("listNFTsForWalletForClient", () => {
//     const accessToken: string = "accessToken_example"
//     const walletId: string = "walletId_example"
//     const tokenDataIds: Array<ObjectId> = undefined
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     return expect(instance.listNFTsForWalletForClient(accessToken, walletId, tokenDataIds, lastId, size, {})).resolves.toBe(null)
//   })
//   test("listNFTsForWalletForServer", () => {
//     const xApiKey: string = "xApiKey_example"
//     const walletId: string = "walletId_example"
//     const tokenDataIds: Array<ObjectId> = undefined
//     const lastId: string = "lastId_example"
//     const size: number = 1.2
//     return expect(instance.listNFTsForWalletForServer(xApiKey, walletId, tokenDataIds, lastId, size, {})).resolves.toBe(null)
//   })
// })
