/* tslint:disable */
/* eslint-disable */
/**
 * namaste-be
 * Namaste Server
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ResponseCompany
 */
export interface ResponseCompany {
  /**
   *
   * @type {string}
   * @memberof ResponseCompany
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof ResponseCompany
   */
  apiSecretKey: string;
  /**
   *
   * @type {string}
   * @memberof ResponseCompany
   */
  poc: string;
  /**
   *
   * @type {string}
   * @memberof ResponseCompany
   */
  pocEmail: string;
  /**
   *
   * @type {boolean}
   * @memberof ResponseCompany
   */
  active: boolean;
  /**
   *
   * @type {string}
   * @memberof ResponseCompany
   */
  pocWalletId: string;
  /**
   *
   * @type {string}
   * @memberof ResponseCompany
   */
  minterWalletId: string;
  /**
   *
   * @type {any}
   * @memberof ResponseCompany
   */
  testErc20TokenDataIds: any | null;
  /**
   *
   * @type {string}
   * @memberof ResponseCompany
   */
  id: string;
}

/**
 * Check if a given object implements the ResponseCompany interface.
 */
export function instanceOfResponseCompany(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'name' in value;
  isInstance = isInstance && 'apiSecretKey' in value;
  isInstance = isInstance && 'poc' in value;
  isInstance = isInstance && 'pocEmail' in value;
  isInstance = isInstance && 'active' in value;
  isInstance = isInstance && 'pocWalletId' in value;
  isInstance = isInstance && 'minterWalletId' in value;
  isInstance = isInstance && 'testErc20TokenDataIds' in value;
  isInstance = isInstance && 'id' in value;

  return isInstance;
}

export function ResponseCompanyFromJSON(json: any): ResponseCompany {
  return ResponseCompanyFromJSONTyped(json, false);
}

export function ResponseCompanyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseCompany {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json['name'],
    apiSecretKey: json['apiSecretKey'],
    poc: json['poc'],
    pocEmail: json['pocEmail'],
    active: json['active'],
    pocWalletId: json['pocWalletId'],
    minterWalletId: json['minterWalletId'],
    testErc20TokenDataIds: json['testErc20TokenDataIds'],
    id: json['id'],
  };
}

export function ResponseCompanyToJSON(value?: ResponseCompany | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    apiSecretKey: value.apiSecretKey,
    poc: value.poc,
    pocEmail: value.pocEmail,
    active: value.active,
    pocWalletId: value.pocWalletId,
    minterWalletId: value.minterWalletId,
    testErc20TokenDataIds: value.testErc20TokenDataIds,
    id: value.id,
  };
}
