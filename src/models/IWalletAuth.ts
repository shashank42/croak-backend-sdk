/* tslint:disable */
/* eslint-disable */
/**
 * namaste-be
 * Namaste Server
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface IWalletAuth
 */
export interface IWalletAuth {
  /**
   * Signed access token from the user's wallet
   * @type {string}
   * @memberof IWalletAuth
   */
  signature: string;
  /**
   * Access token returned from the social login provider, eg. google, twitter, etc.
   * @type {string}
   * @memberof IWalletAuth
   */
  accessToken: string;
  /**
   * Verifier of the social login provider, eg. google, twitter, etc.
   * @type {string}
   * @memberof IWalletAuth
   */
  verifier: string;
  /**
   * The company id used to initialize the wallet on the client's front end.
   * @type {string}
   * @memberof IWalletAuth
   */
  companyId?: string;
}

/**
 * Check if a given object implements the IWalletAuth interface.
 */
export function instanceOfIWalletAuth(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'signature' in value;
  isInstance = isInstance && 'accessToken' in value;
  isInstance = isInstance && 'verifier' in value;

  return isInstance;
}

export function IWalletAuthFromJSON(json: any): IWalletAuth {
  return IWalletAuthFromJSONTyped(json, false);
}

export function IWalletAuthFromJSONTyped(json: any, ignoreDiscriminator: boolean): IWalletAuth {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    signature: json['signature'],
    accessToken: json['accessToken'],
    verifier: json['verifier'],
    companyId: !exists(json, 'companyId') ? undefined : json['companyId'],
  };
}

export function IWalletAuthToJSON(value?: IWalletAuth | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    signature: value.signature,
    accessToken: value.accessToken,
    verifier: value.verifier,
    companyId: value.companyId,
  };
}
