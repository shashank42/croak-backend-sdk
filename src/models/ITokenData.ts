/* tslint:disable */
/* eslint-disable */
/**
 * namaste-be
 * Namaste Server
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ITokenDataMetadata } from './ITokenDataMetadata';
import {
  ITokenDataMetadataFromJSON,
  ITokenDataMetadataFromJSONTyped,
  ITokenDataMetadataToJSON,
} from './ITokenDataMetadata';

/**
 *
 * @export
 * @interface ITokenData
 */
export interface ITokenData {
  /**
   *
   * @type {any}
   * @memberof ITokenData
   */
  company?: any | null;
  /**
   *
   * @type {number}
   * @memberof ITokenData
   */
  supply: number;
  /**
   *
   * @type {string}
   * @memberof ITokenData
   */
  reserveTokenDataId: string;
  /**
   *
   * @type {number}
   * @memberof ITokenData
   */
  reserveTokenDataAmount: number;
  /**
   *
   * @type {any}
   * @memberof ITokenData
   */
  assetContractId: any | null;
  /**
   *
   * @type {ITokenDataMetadata}
   * @memberof ITokenData
   */
  metadata: ITokenDataMetadata;
}

/**
 * Check if a given object implements the ITokenData interface.
 */
export function instanceOfITokenData(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'supply' in value;
  isInstance = isInstance && 'reserveTokenDataId' in value;
  isInstance = isInstance && 'reserveTokenDataAmount' in value;
  isInstance = isInstance && 'assetContractId' in value;
  isInstance = isInstance && 'metadata' in value;

  return isInstance;
}

export function ITokenDataFromJSON(json: any): ITokenData {
  return ITokenDataFromJSONTyped(json, false);
}

export function ITokenDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ITokenData {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    company: !exists(json, 'company') ? undefined : json['company'],
    supply: json['supply'],
    reserveTokenDataId: json['reserveTokenDataId'],
    reserveTokenDataAmount: json['reserveTokenDataAmount'],
    assetContractId: json['assetContractId'],
    metadata: ITokenDataMetadataFromJSON(json['metadata']),
  };
}

export function ITokenDataToJSON(value?: ITokenData | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    company: value.company,
    supply: value.supply,
    reserveTokenDataId: value.reserveTokenDataId,
    reserveTokenDataAmount: value.reserveTokenDataAmount,
    assetContractId: value.assetContractId,
    metadata: ITokenDataMetadataToJSON(value.metadata),
  };
}
