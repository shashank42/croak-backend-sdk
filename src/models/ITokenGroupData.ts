/* tslint:disable */
/* eslint-disable */
/**
 * namaste-be
 * Namaste Server
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ITokenDataMetadata } from './ITokenDataMetadata';
import {
    ITokenDataMetadataFromJSON,
    ITokenDataMetadataFromJSONTyped,
    ITokenDataMetadataToJSON,
} from './ITokenDataMetadata';

/**
 * 
 * @export
 * @interface ITokenGroupData
 */
export interface ITokenGroupData {
    /**
     * 
     * @type {any}
     * @memberof ITokenGroupData
     */
    company?: any | null;
    /**
     * 
     * @type {string}
     * @memberof ITokenGroupData
     */
    assetContractId: string;
    /**
     * 
     * @type {string}
     * @memberof ITokenGroupData
     */
    reserveTokenDataId: string;
    /**
     * 
     * @type {number}
     * @memberof ITokenGroupData
     */
    reserveTokenDataAmount: number;
    /**
     * 
     * @type {ITokenDataMetadata}
     * @memberof ITokenGroupData
     */
    metadata: ITokenDataMetadata;
}

/**
 * Check if a given object implements the ITokenGroupData interface.
 */
export function instanceOfITokenGroupData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "assetContractId" in value;
    isInstance = isInstance && "reserveTokenDataId" in value;
    isInstance = isInstance && "reserveTokenDataAmount" in value;
    isInstance = isInstance && "metadata" in value;

    return isInstance;
}

export function ITokenGroupDataFromJSON(json: any): ITokenGroupData {
    return ITokenGroupDataFromJSONTyped(json, false);
}

export function ITokenGroupDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ITokenGroupData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'company': !exists(json, 'company') ? undefined : json['company'],
        'assetContractId': json['assetContractId'],
        'reserveTokenDataId': json['reserveTokenDataId'],
        'reserveTokenDataAmount': json['reserveTokenDataAmount'],
        'metadata': ITokenDataMetadataFromJSON(json['metadata']),
    };
}

export function ITokenGroupDataToJSON(value?: ITokenGroupData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company': value.company,
        'assetContractId': value.assetContractId,
        'reserveTokenDataId': value.reserveTokenDataId,
        'reserveTokenDataAmount': value.reserveTokenDataAmount,
        'metadata': ITokenDataMetadataToJSON(value.metadata),
    };
}

