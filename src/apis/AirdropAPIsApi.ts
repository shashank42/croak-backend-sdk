/* tslint:disable */
/* eslint-disable */
/**
 * namaste-be
 * Namaste Server
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type {
  IErrorResponse,
  IMintData,
  IMintTokenGroupData,
  ResponsesAnyArray,
  ResponsesResponseNFTMintSaleArray,
} from '../models';
import {
  IErrorResponseFromJSON,
  IErrorResponseToJSON,
  IMintDataFromJSON,
  IMintDataToJSON,
  IMintTokenGroupDataFromJSON,
  IMintTokenGroupDataToJSON,
  ResponsesAnyArrayFromJSON,
  ResponsesAnyArrayToJSON,
  ResponsesResponseNFTMintSaleArrayFromJSON,
  ResponsesResponseNFTMintSaleArrayToJSON,
} from '../models';

export interface MintTestFungibleTokenDataRequest {
  xApiKey: string;
  iMintData: IMintData;
}

export interface MintTokenDataRequest {
  xApiKey: string;
  iMintData: IMintData;
}

export interface MintTokenGroupDataRequest {
  xApiKey: string;
  iMintTokenGroupData: IMintTokenGroupData;
}

/**
 * AirdropAPIsApi - interface
 *
 * @export
 * @interface AirdropAPIsApiInterface
 */
export interface AirdropAPIsApiInterface {
  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   * @param {string} xApiKey - This is the API key that you created in the previous step.
   * @param {IMintData} iMintData This is a token data creation request description.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof AirdropAPIsApiInterface
   */
  mintTestFungibleTokenDataRaw(
    requestParameters: MintTestFungibleTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ResponsesAnyArray>>;

  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  mintTestFungibleTokenData(
    requestParameters: MintTestFungibleTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ResponsesAnyArray>;

  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   * @param {string} xApiKey - This is the API key that you will use to authenticate your requests.
   * @param {IMintData} iMintData This is a token data creation request description.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof AirdropAPIsApiInterface
   */
  mintTokenDataRaw(
    requestParameters: MintTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ResponsesResponseNFTMintSaleArray>>;

  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  mintTokenData(
    requestParameters: MintTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ResponsesResponseNFTMintSaleArray>;

  /**
   * Mints an **amount** quantity of a particular token using the token group data id. The supply will be set to 1 for each token minted using this group. You can mint to multiple wallets at once. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   * @param {string} xApiKey - This is the API key that you will use to authenticate your requests.
   * @param {IMintTokenGroupData} iMintTokenGroupData This is a token data creation request description.
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof AirdropAPIsApiInterface
   */
  mintTokenGroupDataRaw(
    requestParameters: MintTokenGroupDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ResponsesResponseNFTMintSaleArray>>;

  /**
   * Mints an **amount** quantity of a particular token using the token group data id. The supply will be set to 1 for each token minted using this group. You can mint to multiple wallets at once. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  mintTokenGroupData(
    requestParameters: MintTokenGroupDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ResponsesResponseNFTMintSaleArray>;
}

/**
 *
 */
export class AirdropAPIsApi extends runtime.BaseAPI implements AirdropAPIsApiInterface {
  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  async mintTestFungibleTokenDataRaw(
    requestParameters: MintTestFungibleTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ResponsesAnyArray>> {
    if (requestParameters.xApiKey === null || requestParameters.xApiKey === undefined) {
      throw new runtime.RequiredError(
        'xApiKey',
        'Required parameter requestParameters.xApiKey was null or undefined when calling mintTestFungibleTokenData.',
      );
    }

    if (requestParameters.iMintData === null || requestParameters.iMintData === undefined) {
      throw new runtime.RequiredError(
        'iMintData',
        'Required parameter requestParameters.iMintData was null or undefined when calling mintTestFungibleTokenData.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    if (requestParameters.xApiKey !== undefined && requestParameters.xApiKey !== null) {
      headerParameters['x-api-key'] = String(requestParameters.xApiKey);
    }

    const response = await this.request(
      {
        path: `/airdrop/test-fungible-token-data`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: IMintDataToJSON(requestParameters.iMintData),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => ResponsesAnyArrayFromJSON(jsonValue));
  }

  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  async mintTestFungibleTokenData(
    requestParameters: MintTestFungibleTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ResponsesAnyArray> {
    const response = await this.mintTestFungibleTokenDataRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  async mintTokenDataRaw(
    requestParameters: MintTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ResponsesResponseNFTMintSaleArray>> {
    if (requestParameters.xApiKey === null || requestParameters.xApiKey === undefined) {
      throw new runtime.RequiredError(
        'xApiKey',
        'Required parameter requestParameters.xApiKey was null or undefined when calling mintTokenData.',
      );
    }

    if (requestParameters.iMintData === null || requestParameters.iMintData === undefined) {
      throw new runtime.RequiredError(
        'iMintData',
        'Required parameter requestParameters.iMintData was null or undefined when calling mintTokenData.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    if (requestParameters.xApiKey !== undefined && requestParameters.xApiKey !== null) {
      headerParameters['x-api-key'] = String(requestParameters.xApiKey);
    }

    const response = await this.request(
      {
        path: `/airdrop/token-data`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: IMintDataToJSON(requestParameters.iMintData),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => ResponsesResponseNFTMintSaleArrayFromJSON(jsonValue));
  }

  /**
   * Mints an **amount** quantity of a particular token using the token data id. You can mint to multiple wallets at once, limited by supply. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  async mintTokenData(
    requestParameters: MintTokenDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ResponsesResponseNFTMintSaleArray> {
    const response = await this.mintTokenDataRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * Mints an **amount** quantity of a particular token using the token group data id. The supply will be set to 1 for each token minted using this group. You can mint to multiple wallets at once. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  async mintTokenGroupDataRaw(
    requestParameters: MintTokenGroupDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ResponsesResponseNFTMintSaleArray>> {
    if (requestParameters.xApiKey === null || requestParameters.xApiKey === undefined) {
      throw new runtime.RequiredError(
        'xApiKey',
        'Required parameter requestParameters.xApiKey was null or undefined when calling mintTokenGroupData.',
      );
    }

    if (requestParameters.iMintTokenGroupData === null || requestParameters.iMintTokenGroupData === undefined) {
      throw new runtime.RequiredError(
        'iMintTokenGroupData',
        'Required parameter requestParameters.iMintTokenGroupData was null or undefined when calling mintTokenGroupData.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    if (requestParameters.xApiKey !== undefined && requestParameters.xApiKey !== null) {
      headerParameters['x-api-key'] = String(requestParameters.xApiKey);
    }

    const response = await this.request(
      {
        path: `/airdrop/token-group-data`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: IMintTokenGroupDataToJSON(requestParameters.iMintTokenGroupData),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => ResponsesResponseNFTMintSaleArrayFromJSON(jsonValue));
  }

  /**
   * Mints an **amount** quantity of a particular token using the token group data id. The supply will be set to 1 for each token minted using this group. You can mint to multiple wallets at once. Try fewer wallets if it doesn\'t work. Warning - This step costs gas.
   */
  async mintTokenGroupData(
    requestParameters: MintTokenGroupDataRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ResponsesResponseNFTMintSaleArray> {
    const response = await this.mintTokenGroupDataRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
